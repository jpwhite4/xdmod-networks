{
    "table_definition": [
        {
            "$ref": "${table_definition_dir}/networks/transferfact.json#/table_definition"
        }
    ],
    "source_query": {
        "records": {
            "resource_id": "r.id",
            "start_time_ts": "s.start_time_ts",
            "end_time_ts": "s.end_time_ts",
            "start_day_id": "YEAR(FROM_UNIXTIME(s.start_time_ts)) * 100000 + DAYOFYEAR(FROM_UNIXTIME(s.start_time_ts))",
            "end_day_id": "YEAR(FROM_UNIXTIME(s.end_time_ts)) * 100000 + DAYOFYEAR(FROM_UNIXTIME(s.end_time_ts))",
            "person_id": "-1",
            "user_id": "u.id",
            "filename_id": "f.id",
            "destination_id": "l.id",
            "type_id": "t.id",
            "code_id": "s.code",
            "taskid_id": "tt.id",
            "buffer_size": "s.buffer_size",
            "block_size": "s.block_size",
            "bytes": "s.bytes",
            "stream_count": "s.stream_count",
            "stripe_count": "s.stripe_count"
        },
        "joins": [
            {
                "name": "staging",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "s"
            },
            {
                "name": "resourcefact",
                "schema": "${UTILITY_SCHEMA}",
                "alias": "r",
                "on": "r.code = '${GRIDFTP_RESOURCE_CODE}'"
            },
            {
                "name": "users",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "u",
                "on": "u.username = s.user"
            },
            {
                "name": "files",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "f",
                "on": "UNHEX(SHA2(s.filename, 256)) = f.filename_sha256"
            },
            {
                "name": "location",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "l",
                "on": "l.name = CASE WHEN s.dest_city = 'unknown' AND s.dest_subdivision = 'unknown' AND s.dest_country = 'unknown' THEN 'Unknown' ELSE CONCAT_WS(', ', s.dest_city, s.dest_subdivision, s.dest_country) END"
            },
            {
                "name": "types",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "t",
                "on": "t.type = s.type"
            },
            {
                "name": "tasks",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "tt",
                "on": "tt.taskid_bin = UNHEX(REPLACE(s.taskid, '-', ''))"
            }
        ]
    },
    "destination_record_map": {
        "transferfact": {
            "resource_id": "resource_id",
            "start_time_ts": "start_time_ts",
            "end_time_ts": "end_time_ts",
            "start_day_id": "start_day_id",
            "end_day_id": "end_day_id",
            "person_id": "person_id",
            "user_id": "user_id",
            "filename_id": "filename_id",
            "destination_id": "destination_id",
            "type_id": "type_id",
            "code_id": "code_id",
            "taskid_id": "taskid_id",
            "buffer_size": "buffer_size",
            "block_size": "block_size",
            "bytes": "bytes",
            "stream_count": "stream_count",
            "stripe_count": "stripe_count"
        }
    }
}
